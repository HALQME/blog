---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";
import ProjectCard from "@/components/ui/ProjectCard.astro";
import { styles } from "@/styles/tailwind";

export async function getStaticPaths({ paginate }: Paginate) {
    const posts = (await getCollection("projects")).sort(
        (a, b) =>
            b.data.version.pubDate.valueOf() - a.data.version.pubDate.valueOf()
    );
    return paginate(posts, { pageSize: 10 });
}

const posts = (await getCollection("projects")).sort(
    (a, b) =>
        b.data.version.pubDate.valueOf() - a.data.version.pubDate.valueOf()
);
const { page } = Astro.props as PageProps;

const lastPage = Math.ceil(posts.length / 10);
---

<Layout title={`Projects - Page ${page.currentPage} | HALQME`}>
    <section class={styles.layout.container} data-pagefind-ignore>
        <h1 class={styles.text.heading.h1}>
            Projects
            <small>
                - Page {page.currentPage}
            </small>
        </h1>

        <div class="grid grid-cols-1 sm:grid-cols-2 gap-8 mx-6">
            {page.data.map((post) => <ProjectCard project={post} />)}
        </div>

        <div class={styles.pagination.container}>
            {
                page.url.prev && page.currentPage > 2 && (
                    <a
                        href={`/projects/1/`}
                        class="px-3 py-2 rounded-lg text-sm text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30"
                    >
                        «
                    </a>
                )
            }
            {
                page.url.prev && page.currentPage - 1 > 2 && (
                    <span class="px-3 py-2 text-sm text-gray-600">...</span>
                )
            }
            {
                page.url.prev && (
                    <a
                        href={page.url.prev}
                        class="px-3 py-2 rounded-lg text-sm text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30"
                    >
                        {page.currentPage - 1}
                    </a>
                )
            }
            <span class="px-3 py-2 rounded-lg text-sm bg-blue-600 text-white">
                {page.currentPage}
            </span>
            {
                page.url.next && (
                    <a
                        href={page.url.next}
                        class="px-3 py-2 rounded-lg text-sm text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30"
                    >
                        {page.currentPage + 1}
                    </a>
                )
            }
            {
                page.url.next && page.currentPage + 1 < lastPage && (
                    <span class="px-3 py-2 text-sm text-gray-600">...</span>
                )
            }
            {
                page.url.next && (
                    <a
                        href={`/projects/${lastPage}/`}
                        class="px-3 py-2 rounded-lg text-sm text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-900/30"
                    >
                        »
                    </a>
                )
            }
        </div>
    </section>
</Layout>
