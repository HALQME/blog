---
import { languageTags } from "@/tags";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";

type Project = CollectionEntry<"projects">;

interface Props {
    project: Project;
}
const { project } = Astro.props;
const lang = project.data.language
    ? languageTags.filter((tag) => project.data.language!.includes(tag.name))[0]
    : null;

const versionString =
    project.data.version.value.major +
    "." +
    project.data.version.value.minor +
    "." +
    project.data.version.value.patch;
---

<article
    class="group bg-white dark:bg-gray-800 rounded-xl shadow-sm overflow-hidden border border-gray-200 dark:border-gray-700 hover:border-blue-500 dark:hover:border-blue-400 hover:shadow-lg hover:-translate-y-0.5 transition-all duration-200"
>
    <a href={`/projects/${project.id}/`} class="block">
        <div class="p-6">
            <h2
                class="text-2xl font-bold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors mb-4"
            >
                {project.data.title}
            </h2>
            <div
                class="flex items-center flex-wrap gap-2 text-sm text-gray-600 dark:text-gray-400 mb-4"
            >
                <div
                    class="flex items-center bg-gray-50 dark:bg-gray-700/50 px-3 py-1.5 rounded-full"
                >
                    <svg
                        class="w-4 h-4 mr-2 text-gray-500 dark:text-gray-400"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                    >
                        <path
                            fill-rule="evenodd"
                            d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                            clip-rule="evenodd"></path>
                    </svg>
                    <FormattedDate date={project.data.version.pubDate} />
                </div>
                <span
                    class="font-mono bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 px-3 py-1.5 rounded-full text-xs font-medium"
                >
                    v{versionString}
                </span>
                {
                    lang && (
                        <span
                            class={`inline-flex items-center rounded-full px-3 py-1.5 text-sm font-medium ${lang.colorValue()} bg-opacity-15 dark:bg-opacity-25`}
                        >
                            {lang.name}
                        </span>
                    )
                }
            </div>
            <p class="text-gray-600 dark:text-gray-400 line-clamp-2">
                {project.data.description}
            </p>
        </div>
    </a>
</article>
