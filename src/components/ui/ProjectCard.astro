---
import { languageTags } from "@/tags";
import type { CollectionEntry } from "astro:content";
import { styles } from "@/styles/tailwind";

type Project = CollectionEntry<"projects">;

interface Props {
    project: Project;
}
const { project } = Astro.props;
const lang = project.data.language
    ? languageTags.filter((tag) => project.data.language!.includes(tag.name))[0]
    : null;

const versionString =
    project.data.version.value.major +
    "." +
    project.data.version.value.minor +
    "." +
    project.data.version.value.patch;
---

<article
    class={`${styles.components.card.wrapper} bg-white dark:bg-gray-800 rounded-xl shadow-sm overflow-hidden border border-gray-200 dark:border-gray-700 hover:border-blue-500 dark:hover:border-blue-400 hover:shadow-lg hover:-translate-y-0.5 transition-all duration-200`}
>
    <a href={`/projects/${project.id}/`} class="block">
        <div class="p-6">
            <h2
                class={`${styles.text.heading.h2} group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors mb-4`}
            >
                {project.data.title}
            </h2>
            <div
                class="flex items-center flex-wrap gap-2 text-sm text-gray-600 dark:text-gray-400 mb-4"
            >
                <span class={styles.components.tag.blue}>
                    v{versionString}
                </span>
                {
                    lang && (
                        <span
                            class={`${styles.components.tag.default} ${lang.colorValue()} bg-opacity-15 dark:bg-opacity-25`}
                        >
                            {lang.name}
                        </span>
                    )
                }
            </div>
            <p class={styles.text.body.muted + " line-clamp-2"}>
                {project.data.description}
            </p>
        </div>
    </a>
</article>
