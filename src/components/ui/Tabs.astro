---
/*
# Tab View Component
> requirement: Tailwind CSS (Vite Plugin)
## Usage
```astro
<Tabs>
    <div slot="tab-1" id="first">Tab 1</div>
    <div slot="panel-1">Content 1</div>
    <div slot="tab-2" id="second">Tab 1</div>
    <div slot="panel-2">Content 1</div>
</Tabs>

<Tabs id="section2">
    <div slot="tab-1">Another Tab</div>
    <div slot="panel-1">Another Content</div>
</Tabs>
```
*/
export interface Props extends astroHTML.JSX.HTMLAttributes {}
const props = Astro.props as Props;
const tabs: string[] = [];
const panels: string[] = [];
{
    let index = 0;
    Object.entries(Astro.slots).forEach(([name]) => {
        if (name.startsWith("tab")) {
            index += 1;
            tabs.push(name);
        } else if (name.startsWith("panel")) {
            index += 1;
            panels.push(name);
        }
    });
}
const extractIndex = (name: string) => parseInt(name.split("-")[1]);
tabs.sort((a, b) => extractIndex(a) - extractIndex(b));
panels.sort((a, b) => extractIndex(a) - extractIndex(b));
---

<astro-tabs
    {...{ ...props, class: undefined, "class:list": undefined }}
    class:list={["tabs", "relative", props["class:list"], props.class]}
>
    <nav
        class="flex overflow-x-auto border-b border-gray-200 dark:border-gray-700"
        role="tablist"
        aria-label="タブナビゲーション"
    >
        {
            tabs.map(async (name, idx) => {
                const index = idx;
                if (name.startsWith("tab")) {
                    const render = await Astro.slots.render(name);
                    // 正規表現を使用してID属性を抽出
                    const idMatch = render.match(/id=["']([^"']+)["']/);
                    const tabId = idMatch ? idMatch[1] : `tab-${index}`;

                    return (
                        <a
                            href={`#${tabId}`}
                            id={`tab-${tabId}`}
                            data-tab-id={tabId}
                            data-astro-history="replace"
                            class:list={[
                                "tab-button",
                                "block",
                                "whitespace-nowrap",
                                "cursor-pointer",
                                "py-2",
                                "px-4",
                                "font-medium",
                                "transition-colors",
                                "duration-300",
                                "border-b-2",
                                "text-gray-500",
                                "hover:text-gray-600",
                                "border-transparent",
                                "hover:border-gray-300",
                                "dark:text-gray-400",
                                "dark:hover:text-gray-300",
                                "dark:border-transparent",
                                "dark:hover:border-gray-700",
                            ]}
                            role="tab"
                            aria-selected="false"
                            aria-controls={`panel-${tabId}`}
                            data-tab-index={index}
                            set:html={render}
                        />
                    );
                }
            })
        }
    </nav>

    <div class="relative" role="tabpanel">
        {
            panels.map(async (name, idx) => {
                const panelIndex = parseInt(name.replace("panel-", ""));
                const panelId = `panel-${panelIndex}`;
                const content = await Astro.slots.render(name);

                return (
                    <div
                        id={panelId}
                        data-panel-index={panelIndex}
                        class:list={[
                            `panel-${panelIndex}`,
                            "panel",
                            "hidden", // 最初はすべて非表示
                        ]}
                        aria-labelledby={`tab-${panelId}`}
                        set:html={content}
                    />
                );
            })
        }
    </div>
</astro-tabs>

<script src="./_tabs.ts"></script>
