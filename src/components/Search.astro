---
import "@pagefind/default-ui/css/ui.css";
---

<button
    id="search-button"
    aria-label="サイト内検索"
    class="cursor-pointer flex flex-row text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors py-1 px-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800"
>
    🔍 <span class="hidden sm:block ml-1">検索</span></button
>

<div id="search-modal" class="search-modal">
    <div id="search" class="search-content">
        <h1 class="text-xl font-bold mb-4">ページ内検索</h1>
    </div>
</div>

<style>
    .search-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 999;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(5px);
        padding: 2rem;
    }

    .search-modal.is-active {
        display: block;
    }

    .search-content {
        background: white;
        border-radius: 8px;
        max-width: 800px;
        margin: 0 auto;
        padding: 1rem;
        max-height: 80vh;
        overflow-y: auto;
    }
</style>

<script>
    import { PagefindUI } from "@pagefind/default-ui";

    function initializeSearch() {
        // 要素の取得
        const searchButton = document.getElementById("search-button");
        const searchModal = document.getElementById("search-modal");

        // すでに初期化されている場合は処理しない
        if (searchButton?.dataset.initialized === "true") {
            return;
        }

        // 検索UIの初期化
        if (document.getElementById("search")) {
            const pageFind = new PagefindUI({
                element: "#search",
                showImages: false,
                autofocus: true,
                resetStyles: true,
            });
        }

        // 検索ボタンクリックイベント
        searchButton?.addEventListener("click", () => {
            searchModal?.classList.add("is-active");
        });

        // 初期化フラグを設定
        if (searchButton) {
            searchButton.dataset.initialized = "true";
        }

        // モーダルの背景部分をクリックして閉じる
        searchModal?.addEventListener("click", (e) => {
            if (e.target === searchModal) {
                searchModal.classList.remove("is-active");
            }
        });
    }

    // グローバルのキーボードイベント（一度だけ設定）
    function setupGlobalEvents() {
        // ESCキーを押して閉じる処理
        document.addEventListener("keydown", (e) => {
            if (e.key === "Escape") {
                const modal = document.getElementById("search-modal");
                if (modal?.classList.contains("is-active")) {
                    modal.classList.remove("is-active");
                }
            }
        });
    }

    setupGlobalEvents();

    // ページ遷移後の再初期化
    document.addEventListener("astro:page-load", initializeSearch, {
        once: false,
    });
</script>
